"""DB installation

Revision ID: 5394f8fc7257
Revises: None
Create Date: 2017-03-15 06:01:16.091911

"""

# revision identifiers, used by Alembic.
revision = '5394f8fc7257'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, DateTime
from datetime import datetime


version_table = table('schema_versions',
    column('version', Integer),
    column('created', DateTime),
    column('comment', String(255))
)

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial', sa.String(length=512), nullable=True),
    sa.Column('board_type', sa.String(length=45), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('condition_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('value_type', sa.Enum('json', 'string', 'float', 'int', 'bool', 'time', 'blob', native_enum=False), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=45), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.Text(), nullable=False),
    sa.Column('sha256', sa.String(length=44), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_ids', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('related_run', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('user_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runs',
    sa.Column('number', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('started', sa.DateTime(), nullable=True),
    sa.Column('finished', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('number'),
    sa.UniqueConstraint('number')
    )
    op.create_table('schema_versions',
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('version')
    )
    op.create_table('board_installations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('crate_id', sa.Integer(), nullable=True),
    sa.Column('slot', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['crate_id'], ['crates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text_value', sa.Text(), nullable=True),
    sa.Column('int_value', sa.Integer(), nullable=False),
    sa.Column('float_value', sa.Float(), nullable=False),
    sa.Column('bool_value', sa.Boolean(), nullable=False),
    sa.Column('time_value', sa.DateTime(), nullable=True),
    sa.Column('run_number', sa.Integer(), nullable=True),
    sa.Column('condition_type_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['condition_type_id'], ['condition_types.id'], ),
    sa.ForeignKeyConstraint(['run_number'], ['runs.number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dac_presets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('files_have_runs',
    sa.Column('files_id', sa.Integer(), nullable=True),
    sa.Column('run_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['files_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['run_number'], ['runs.number'], )
    )
    op.create_table('readout_masks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('readout_thresholds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trigger_masks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trigger_thresholds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('values', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('board_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('readout_threshold_id', sa.Integer(), nullable=True),
    sa.Column('trigger_threshold_id', sa.Integer(), nullable=True),
    sa.Column('readout_mask_id', sa.Integer(), nullable=True),
    sa.Column('trigger_mask_id', sa.Integer(), nullable=True),
    sa.Column('dac_preset_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['dac_preset_id'], ['dac_presets.id'], ),
    sa.ForeignKeyConstraint(['readout_mask_id'], ['readout_masks.id'], ),
    sa.ForeignKeyConstraint(['readout_threshold_id'], ['readout_thresholds.id'], ),
    sa.ForeignKeyConstraint(['trigger_mask_id'], ['trigger_masks.id'], ),
    sa.ForeignKeyConstraint(['trigger_threshold_id'], ['trigger_thresholds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('board_installations_have_runs',
    sa.Column('board_installation_id', sa.Integer(), nullable=True),
    sa.Column('run_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_installation_id'], ['board_installations.id'], ),
    sa.ForeignKeyConstraint(['run_number'], ['runs.number'], )
    )
    op.create_table('board_configurations_have_runs',
    sa.Column('board_configuration_id', sa.Integer(), nullable=True),
    sa.Column('run_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_configuration_id'], ['board_configurations.id'], ),
    sa.ForeignKeyConstraint(['run_number'], ['runs.number'], )
    )
    # ### end Alembic commands ###

    op.bulk_insert(version_table, [{
        'version': 1,
        'created': datetime(2016, 03, 18, 16, 34, 31),
        'comment': 'Conditions.time = > time_value. SQL schema version added'}])




def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('board_configurations_have_runs')
    op.drop_table('board_installations_have_runs')
    op.drop_table('board_configurations')
    op.drop_table('trigger_thresholds')
    op.drop_table('trigger_masks')
    op.drop_table('readout_thresholds')
    op.drop_table('readout_masks')
    op.drop_table('files_have_runs')
    op.drop_table('dac_presets')
    op.drop_table('conditions')
    op.drop_table('board_installations')
    op.drop_table('schema_versions')
    op.drop_table('runs')
    op.drop_table('logs')
    op.drop_table('files')
    op.drop_table('crates')
    op.drop_table('condition_types')
    op.drop_table('boards')
    # ### end Alembic commands ###
